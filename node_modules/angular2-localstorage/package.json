{
  "_args": [
    [
      {
        "raw": "marcj/angular2-localstorage",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "marcj/angular2-localstorage",
        "spec": "github:marcj/angular2-localstorage",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:marcj/angular2-localstorage.git",
          "sshUrl": "git+ssh://git@github.com/marcj/angular2-localstorage.git",
          "httpsUrl": "git+https://github.com/marcj/angular2-localstorage.git",
          "gitUrl": "git://github.com/marcj/angular2-localstorage.git",
          "shortcut": "github:marcj/angular2-localstorage",
          "directUrl": "https://raw.githubusercontent.com/marcj/angular2-localstorage/master/package.json"
        }
      },
      "C:\\Web\\BatonezasWeb"
    ]
  ],
  "_from": "marcj/angular2-localstorage",
  "_id": "angular2-localstorage@0.4.0",
  "_inCache": true,
  "_location": "/angular2-localstorage",
  "_phantomChildren": {},
  "_requested": {
    "raw": "marcj/angular2-localstorage",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "marcj/angular2-localstorage",
    "spec": "github:marcj/angular2-localstorage",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:marcj/angular2-localstorage.git",
      "sshUrl": "git+ssh://git@github.com/marcj/angular2-localstorage.git",
      "httpsUrl": "git+https://github.com/marcj/angular2-localstorage.git",
      "gitUrl": "git://github.com/marcj/angular2-localstorage.git",
      "shortcut": "github:marcj/angular2-localstorage",
      "directUrl": "https://raw.githubusercontent.com/marcj/angular2-localstorage/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git://github.com/marcj/angular2-localstorage.git#85b25caca6eb969632e258fa5587e85e871b38b6",
  "_shasum": "2793493440a5c82b1caf6099ff5fd65bdb7574f7",
  "_shrinkwrap": null,
  "_spec": "marcj/angular2-localstorage",
  "_where": "C:\\Web\\BatonezasWeb",
  "author": {
    "name": "Marc J. Schmidt"
  },
  "bugs": {
    "url": "https://github.com/marcj/angular2-localstorage/issues"
  },
  "dependencies": {},
  "description": "Angular2 decorator to save and restore class properties automatically from LocalStorage.",
  "devDependencies": {
    "@angular/core": "^2.0.0",
    "@types/core-js": "^0.9.34",
    "rimraf": "^2.5.4",
    "rxjs": "^5.0.0-beta.12",
    "tslint": "^3.15.1",
    "typings": "^1.3.3",
    "zone.js": "^0.6.25"
  },
  "gitHead": "85b25caca6eb969632e258fa5587e85e871b38b6",
  "homepage": "https://github.com/marcj/angular2-localstorage",
  "keywords": [
    "Angular2",
    "LocalStorage"
  ],
  "license": "ISC",
  "name": "angular2-localstorage",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.0.0",
    "core-js": "^2.4.1",
    "rxjs": "^5.0.0-beta.12",
    "zone.js": "^0.6.25"
  },
  "readme": "# Angular2 @LocalStorage\r\n\r\nThis little Angular2/typescript decorator makes it super easy to save and restore *automatically* a variable state in your\r\ndirective (class property) using HTML5' LocalStorage.\r\n\r\n## Seeking new maintainer\r\n\r\nThis project is not maintained. Please consider taking it over. More information at https://github.com/open-source-chest/take-it-over.\r\n\r\n## Use\r\n\r\n1. Download the library using npm or github: `npm install --save angular2-localstorage`\r\n2. Import the WebStorageModule in your app module:\r\n    ```typescript\r\n    import {Component} from \"angular2/core\";\r\n    import {WebStorageModule, LocalStorageService} from \"angular2-localstorage\";\r\n\r\n    @NgModule({\r\n        import: [WebStorageModule]\r\n    @Component({\r\n        providers: [LocalStorageService]\r\n    })\r\n    export class AppModule {}\r\n    ```\r\n\r\n\r\n3. Use the `LocalStorage` decorator\r\n```typescript\r\nimport {LocalStorage, SessionStorage} from \"angular2-localstorage/WebStorage\";\r\n\r\nclass MySuperComponent {\r\n    @LocalStorage() public lastSearchQuery:Object = {};\r\n    @LocalStorage('differentLocalStorageKey') public lastSearchQuery:Object = {};\r\n}\r\n```\r\n\r\n**Note**: Define always a default value at the property you are using `@LocalStorage`.\r\n\r\n**Note**: The localstorage key is per default the property name. Define the first argument of `@LocalStorage` to set different one.\r\n\r\n**Note**: Please don't store circular structures as this library uses JSON.stringify to encode before using LocalStorage.\r\n\r\n## Examples\r\n\r\n```typescript\r\n@Component({\r\n    selector: 'app-login',\r\n    template: `\r\n<form>\r\n    <div>\r\n        <input type=\"text\" [(ngModel)]=\"username\" placeholder=\"Username\" />\r\n        <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"Password\" />\r\n    </div>\r\n    \r\n    <input type=\"checkbox\" [(ngModel)]=\"rememberMe\" /> Keep me logged in\r\n\r\n    <button type=\"submit\">Login</button>\r\n</form>\r\n    `\r\n})\r\nclass AppLoginComponent {\r\n    //here happens the magic. `username` is always restored from the localstorage when you reload the site\r\n    @LocalStorage() public username:string = '';\r\n    \r\n    public password:string;\r\n    \r\n    //here happens the magic. `rememberMe` is always restored from the localstorage when you reload the site\r\n    @LocalStorage() public rememberMe:boolean = false;\r\n}\r\n```\r\n\r\n\r\n```typescript\r\n@Component({\r\n    selector: 'admin-menu',\r\n    template: `\r\n<div *ngFor=\"#menuItem of menuItems() | mapToIterable; #i = index\">\r\n    <h2 (click)=\"hiddenMenuItems[i] = !!!hiddenMenuItems[i]\">\r\n        {{i}}: {{category.label}}\r\n    </h2>\r\n    <div style=\"padding-left: 15px;\" [hidden]=\"hiddenMenuItems[i]\">\r\n        <a href>Some sub menu item 1</a>\r\n        <a href>Some sub menu item 2</a>\r\n        <a href>Some sub menu item 3</a>\r\n    </div>\r\n</div>\r\n    `\r\n})\r\nclass AdminMenuComponent {\r\n    public menuItems = [{title: 'Menu1'}, {title: 'Menu2'}, {title: 'Menu3'}];\r\n\r\n    //here happens the magic. `hiddenMenuItems` is always restored from the localstorage when you reload the site\r\n    @LocalStorage() public hiddenMenuItems:Array<boolean> = [];\r\n    \r\n    //here happens the magic. `profile` is always restored from the sessionStorage when you reload the site from the current tab/browser. This is perfect for more sensitive information that shouldn't stay once the user closes the browser.\r\n    @SessionStorage() public profile:any = {};\r\n}\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/marcj/angular2-localstorage.git"
  },
  "scripts": {
    "build": "rimraf dist && tsc",
    "lint": "tslint ./*.ts -t verbose",
    "postinstall": "typings install",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.4.0"
}
